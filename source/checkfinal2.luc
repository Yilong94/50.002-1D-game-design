module checkfinal2 (
    input clk,
    input rst,
    input player1[49],
    input player2[49],
    input playercount1[4],
    input playercount2[4],
    input player,
    //input button,
    //output endgame,
    output player2new[49],
    output player1new[49],
    output player1newcount[4],
    output player2newcount[4],
    output myled[49]
  ) {
  .clk(clk), .rst(rst){
    fsm checkstates = {S0, S3, S4, S5, S11, S15, S18, S21, S22, S23, S24, S25, S26, S27, S28, S29, S32, S35, S39, S45, S46, END};
    dff tempplayer1[49];
    dff tempplayer2[49];
    dff tempplayercount1[4];
    dff tempplayercount2[4];
    adjacencymat adjacencymat(.player(player));
    }
  
  sig playerandadj;
  sig checkplayerwithadj;
  sig checkplayertoken;
  sig tempSignal;

  always {
    tempplayer1.d = playercount1;
    tempplayer2.d = playercount2;
    tempplayercount1.d = playercount1;
    tempplayercount2.d = playercount2;
    adjacencymat.currentstate = 49b0;
    player1new = player1;
    player2new = player2;
    player1newcount = playercount1;
    player2newcount = playercount2;
    adjacencymat.button = 000;
    
    myled = 49b0000000000000000000000000000000000000000000000000;
    
    
    case(checkstates.q){
        
      checkstates.S0:
        tempSignal = 49b0000000000000000000000000000000000000000000000100;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            //myled = 49b1111111111111111111111111111111111111111111111111;
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S3;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S3;
          }

      checkstates.S3:
        tempSignal = 49b0000000000000000000000000000000000000000000001000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S4;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S4;
          }
      checkstates.S4:
        tempSignal = 49b0000000000000000000000000000000000000000000010000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S5;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S5;
          }
        
      checkstates.S5:
        tempSignal = 49b0000000000000000000000000000000000000010000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S11;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S11;
          }
        
      checkstates.S11:
        tempSignal = 49b0000000000000000000000000000000000100000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S15;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S15;
          }
        
      checkstates.S15:
        tempSignal = 49b0000000000000000000000000000000100000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S18;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S18;
          }
        
      checkstates.S18:
        tempSignal = 49b0000000000000000000000000000100000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S21;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S21;
          }
        
      checkstates.S21:
        tempSignal = 49b0000000000000000000000000001000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S22;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S22;
          }
        
      checkstates.S22:
        tempSignal = 49b0000000000000000000000000010000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S23;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S23;
          }
        
      checkstates.S23:
        tempSignal = 49b0000000000000000000000000100000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S24;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S24;
          }
        
      checkstates.S24:
        tempSignal = 49b0000000000000000000000001000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S25;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S25;
          }
        
      checkstates.S25:
        tempSignal = 49b0000000000000000000000010000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S26;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S26;
          }
        
      checkstates.S26:
        tempSignal = 49b0000000000000000000000100000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S27;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S27;
          }
        
      checkstates.S27:
        tempSignal = 49b0000000000000000000001000000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S28;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S28;
          }
        
      checkstates.S28:
        tempSignal = 49b0000000000000000000010000000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S29;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S29;
          }
        
      checkstates.S29:
        tempSignal = 49b0000000000000000010000000000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S32;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S32;
          }
        
      checkstates.S32:
        tempSignal = 49b0000000000000010000000000000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S35;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S35;
          }
        
      checkstates.S35:
        tempSignal = 49b0000000000100000000000000000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S39;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S39;
          }
        
      checkstates.S39:
        tempSignal = 49b0000100000000000000000000000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S45;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S45;
          }
        
      checkstates.S45:
        tempSignal = 49b0001000000000000000000000000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.S46;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.S46;
          }
        
      checkstates.S46:
        tempSignal = 49b0010000000000000000000000000000000000000000000000;
        adjacencymat.currentstate = tempSignal;
        
        if (player == 0){
          playerandadj = adjacencymat.adjmatrix & player1;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix; 
          checkplayertoken = tempSignal&tempplayer2.q; 
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer2.q){
            tempplayer2.d = tempplayer2.q & ~tempSignal;
            tempplayercount2.d = tempplayercount2.q - 1;
            }
          checkstates.d = checkstates.END;
          }
        else {
          playerandadj = adjacencymat.adjmatrix & player2;
          checkplayerwithadj = playerandadj^adjacencymat.adjmatrix;  
          checkplayertoken = tempSignal&tempplayer1.q;
          if (checkplayerwithadj==49b0 && checkplayertoken==tempplayer1.q){
            tempplayer1.d = tempplayer1.q & ~tempSignal;
            tempplayercount1.d = tempplayercount1.q - 1;
            }
          checkstates.d = checkstates.END;
          }
        
      checkstates.END:
        if (player==0){
          player2new = tempplayer2.q;
          player2newcount = tempplayercount2.q;
          }
        else{
          player1new = tempplayer1.q;
          player1newcount = tempplayercount1.q;
          }
            
}
} 
}