/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module check_7 (
    input clk,
    input rst,
    input [48:0] player1,
    input [48:0] player2,
    input player,
    output reg endgame,
    output reg [48:0] player2new,
    output reg [48:0] player1new
  );
  
  
  
  reg [48:0] player1var;
  
  reg [48:0] player2var;
  
  reg [5:0] player1sum;
  
  reg [5:0] player2sum;
  
  reg [48:0] mask;
  
  reg [48:0] playerandadj;
  
  reg [48:0] player2intermediate;
  
  reg [48:0] player1intermediate;
  
  integer i;
  
  wire [49-1:0] M_adjacencymat_currentposition;
  wire [49-1:0] M_adjacencymat_adjmatrix;
  reg [3-1:0] M_adjacencymat_button;
  reg [49-1:0] M_adjacencymat_currentstate;
  adjacencymat_35 adjacencymat (
    .clk(clk),
    .rst(rst),
    .player(player),
    .button(M_adjacencymat_button),
    .currentstate(M_adjacencymat_currentstate),
    .currentposition(M_adjacencymat_currentposition),
    .adjmatrix(M_adjacencymat_adjmatrix)
  );
  
  always @* begin
    M_adjacencymat_currentstate = 1'h0;
    mask = 49'h0000000000001;
    endgame = 1'h0;
    player1sum = 3'h6;
    player2sum = 3'h6;
    player1new = player1;
    player2new = player2;
    player2intermediate = player2;
    player1intermediate = player1;
    M_adjacencymat_button = 1'h0;
    if (player == 1'h0) begin
      for (i = 1'h0; i < 6'h31; i = i + 1) begin
        if (mask & player2 != 1'h0) begin
          M_adjacencymat_currentstate = mask;
          playerandadj = M_adjacencymat_adjmatrix & player1;
          playerandadj = playerandadj ^ M_adjacencymat_adjmatrix;
          if (playerandadj == 1'h0) begin
            player2intermediate = player2intermediate & (~mask);
          end
          mask = mask << 1'h1;
        end
      end
    end
    if (player == 1'h1) begin
      for (i = 1'h0; i < 6'h31; i = i + 1) begin
        if (mask & player1 != 1'h0) begin
          M_adjacencymat_currentstate = mask;
          playerandadj = M_adjacencymat_adjmatrix & player2;
          playerandadj = playerandadj ^ M_adjacencymat_adjmatrix;
          if (playerandadj == 1'h0) begin
            player1intermediate = player1intermediate & (~mask);
          end
          mask = mask << 1'h1;
        end
      end
    end
    player1new = player1intermediate;
    player2new = player2intermediate;
    player1sum = player1sum + player1intermediate[0+0-:1];
    player1var = player1 >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player1var = player1var >> 1'h1;
    player1sum = player1sum + player1var[0+0-:1];
    player2sum = player2sum + player2intermediate[0+0-:1];
    player2var = player2 >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    player2var = player2var >> 1'h1;
    player2sum = player2sum + player2var[0+0-:1];
    if (player1sum <= 2'h2) begin
      endgame = 1'h1;
    end else begin
      if (player2sum <= 2'h2) begin
        endgame = 1'h1;
      end
    end
  end
endmodule
