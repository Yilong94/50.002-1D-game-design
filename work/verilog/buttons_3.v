/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module buttons_3 (
    input clk,
    input rst,
    input confirmbutton_1,
    input upbutton_1,
    input downbutton_1,
    input rightbutton_1,
    input leftbutton_1,
    input confirmbutton_2,
    input upbutton_2,
    input downbutton_2,
    input rightbutton_2,
    input leftbutton_2,
    input resetbutton,
    output reg confirmbutton_1new,
    output reg upbutton_1new,
    output reg downbutton_1new,
    output reg rightbutton_1new,
    output reg leftbutton_1new,
    output reg confirmbutton_2new,
    output reg upbutton_2new,
    output reg downbutton_2new,
    output reg rightbutton_2new,
    output reg leftbutton_2new,
    output reg resetbutton_new
  );
  
  
  
  wire [1-1:0] M_edgeconfirm1_out;
  reg [1-1:0] M_edgeconfirm1_in;
  edge_detector_13 edgeconfirm1 (
    .clk(clk),
    .in(M_edgeconfirm1_in),
    .out(M_edgeconfirm1_out)
  );
  wire [1-1:0] M_confirmbutton_1cond_out;
  reg [1-1:0] M_confirmbutton_1cond_in;
  button_conditioner_14 confirmbutton_1cond (
    .clk(clk),
    .in(M_confirmbutton_1cond_in),
    .out(M_confirmbutton_1cond_out)
  );
  wire [1-1:0] M_edgeconfirm2_out;
  reg [1-1:0] M_edgeconfirm2_in;
  edge_detector_13 edgeconfirm2 (
    .clk(clk),
    .in(M_edgeconfirm2_in),
    .out(M_edgeconfirm2_out)
  );
  wire [1-1:0] M_confirmbutton_2cond_out;
  reg [1-1:0] M_confirmbutton_2cond_in;
  button_conditioner_14 confirmbutton_2cond (
    .clk(clk),
    .in(M_confirmbutton_2cond_in),
    .out(M_confirmbutton_2cond_out)
  );
  wire [1-1:0] M_edgeupbutton1_out;
  reg [1-1:0] M_edgeupbutton1_in;
  edge_detector_13 edgeupbutton1 (
    .clk(clk),
    .in(M_edgeupbutton1_in),
    .out(M_edgeupbutton1_out)
  );
  wire [1-1:0] M_upbutton_1cond_out;
  reg [1-1:0] M_upbutton_1cond_in;
  button_conditioner_14 upbutton_1cond (
    .clk(clk),
    .in(M_upbutton_1cond_in),
    .out(M_upbutton_1cond_out)
  );
  wire [1-1:0] M_edgeupbutton2_out;
  reg [1-1:0] M_edgeupbutton2_in;
  edge_detector_13 edgeupbutton2 (
    .clk(clk),
    .in(M_edgeupbutton2_in),
    .out(M_edgeupbutton2_out)
  );
  wire [1-1:0] M_upbutton_2cond_out;
  reg [1-1:0] M_upbutton_2cond_in;
  button_conditioner_14 upbutton_2cond (
    .clk(clk),
    .in(M_upbutton_2cond_in),
    .out(M_upbutton_2cond_out)
  );
  wire [1-1:0] M_edgedownbutton1_out;
  reg [1-1:0] M_edgedownbutton1_in;
  edge_detector_13 edgedownbutton1 (
    .clk(clk),
    .in(M_edgedownbutton1_in),
    .out(M_edgedownbutton1_out)
  );
  wire [1-1:0] M_downbutton_1cond_out;
  reg [1-1:0] M_downbutton_1cond_in;
  button_conditioner_14 downbutton_1cond (
    .clk(clk),
    .in(M_downbutton_1cond_in),
    .out(M_downbutton_1cond_out)
  );
  wire [1-1:0] M_edgedownbutton2_out;
  reg [1-1:0] M_edgedownbutton2_in;
  edge_detector_13 edgedownbutton2 (
    .clk(clk),
    .in(M_edgedownbutton2_in),
    .out(M_edgedownbutton2_out)
  );
  wire [1-1:0] M_downbutton_2cond_out;
  reg [1-1:0] M_downbutton_2cond_in;
  button_conditioner_14 downbutton_2cond (
    .clk(clk),
    .in(M_downbutton_2cond_in),
    .out(M_downbutton_2cond_out)
  );
  wire [1-1:0] M_edgeleftbutton1_out;
  reg [1-1:0] M_edgeleftbutton1_in;
  edge_detector_13 edgeleftbutton1 (
    .clk(clk),
    .in(M_edgeleftbutton1_in),
    .out(M_edgeleftbutton1_out)
  );
  wire [1-1:0] M_leftbutton_1cond_out;
  reg [1-1:0] M_leftbutton_1cond_in;
  button_conditioner_14 leftbutton_1cond (
    .clk(clk),
    .in(M_leftbutton_1cond_in),
    .out(M_leftbutton_1cond_out)
  );
  wire [1-1:0] M_edgeleftbutton2_out;
  reg [1-1:0] M_edgeleftbutton2_in;
  edge_detector_13 edgeleftbutton2 (
    .clk(clk),
    .in(M_edgeleftbutton2_in),
    .out(M_edgeleftbutton2_out)
  );
  wire [1-1:0] M_leftbutton_2cond_out;
  reg [1-1:0] M_leftbutton_2cond_in;
  button_conditioner_14 leftbutton_2cond (
    .clk(clk),
    .in(M_leftbutton_2cond_in),
    .out(M_leftbutton_2cond_out)
  );
  wire [1-1:0] M_edgerightbutton1_out;
  reg [1-1:0] M_edgerightbutton1_in;
  edge_detector_13 edgerightbutton1 (
    .clk(clk),
    .in(M_edgerightbutton1_in),
    .out(M_edgerightbutton1_out)
  );
  wire [1-1:0] M_rightbutton_1cond_out;
  reg [1-1:0] M_rightbutton_1cond_in;
  button_conditioner_14 rightbutton_1cond (
    .clk(clk),
    .in(M_rightbutton_1cond_in),
    .out(M_rightbutton_1cond_out)
  );
  wire [1-1:0] M_edgerightbutton2_out;
  reg [1-1:0] M_edgerightbutton2_in;
  edge_detector_13 edgerightbutton2 (
    .clk(clk),
    .in(M_edgerightbutton2_in),
    .out(M_edgerightbutton2_out)
  );
  wire [1-1:0] M_rightbutton_2cond_out;
  reg [1-1:0] M_rightbutton_2cond_in;
  button_conditioner_14 rightbutton_2cond (
    .clk(clk),
    .in(M_rightbutton_2cond_in),
    .out(M_rightbutton_2cond_out)
  );
  wire [1-1:0] M_edgeresetbutton_out;
  reg [1-1:0] M_edgeresetbutton_in;
  edge_detector_13 edgeresetbutton (
    .clk(clk),
    .in(M_edgeresetbutton_in),
    .out(M_edgeresetbutton_out)
  );
  wire [1-1:0] M_resetbuttoncond_out;
  reg [1-1:0] M_resetbuttoncond_in;
  button_conditioner_14 resetbuttoncond (
    .clk(clk),
    .in(M_resetbuttoncond_in),
    .out(M_resetbuttoncond_out)
  );
  
  always @* begin
    M_confirmbutton_1cond_in = confirmbutton_1;
    M_edgeconfirm1_in = M_confirmbutton_1cond_out;
    if (M_edgeconfirm1_out) begin
      confirmbutton_1new = 1'h1;
    end else begin
      confirmbutton_1new = 1'h0;
    end
    M_confirmbutton_2cond_in = confirmbutton_2;
    M_edgeconfirm2_in = M_confirmbutton_2cond_out;
    if (M_edgeconfirm2_out) begin
      confirmbutton_2new = 1'h1;
    end else begin
      confirmbutton_2new = 1'h0;
    end
    M_upbutton_1cond_in = upbutton_1;
    M_edgeupbutton1_in = M_upbutton_1cond_out;
    if (M_edgeupbutton1_out) begin
      upbutton_1new = 1'h1;
    end else begin
      upbutton_1new = 1'h0;
    end
    M_upbutton_2cond_in = upbutton_2;
    M_edgeupbutton2_in = M_upbutton_2cond_out;
    if (M_edgeupbutton2_out) begin
      upbutton_2new = 1'h1;
    end else begin
      upbutton_2new = 1'h0;
    end
    M_leftbutton_1cond_in = leftbutton_1;
    M_edgeleftbutton1_in = M_leftbutton_1cond_out;
    if (M_edgeleftbutton1_out) begin
      leftbutton_1new = 1'h1;
    end else begin
      leftbutton_1new = 1'h0;
    end
    M_leftbutton_2cond_in = leftbutton_2;
    M_edgeleftbutton2_in = M_leftbutton_2cond_out;
    if (M_edgeleftbutton2_out) begin
      leftbutton_2new = 1'h1;
    end else begin
      leftbutton_2new = 1'h0;
    end
    M_rightbutton_1cond_in = rightbutton_1;
    M_edgerightbutton1_in = M_rightbutton_1cond_out;
    if (M_edgerightbutton1_out) begin
      rightbutton_1new = 1'h1;
    end else begin
      rightbutton_1new = 1'h0;
    end
    M_rightbutton_2cond_in = rightbutton_2;
    M_edgerightbutton2_in = M_rightbutton_2cond_out;
    if (M_edgerightbutton2_out) begin
      rightbutton_2new = 1'h1;
    end else begin
      rightbutton_2new = 1'h0;
    end
    M_downbutton_1cond_in = downbutton_1;
    M_edgedownbutton1_in = M_downbutton_1cond_out;
    if (M_edgedownbutton1_out) begin
      downbutton_1new = 1'h1;
    end else begin
      downbutton_1new = 1'h0;
    end
    M_downbutton_2cond_in = downbutton_2;
    M_edgedownbutton2_in = M_downbutton_2cond_out;
    if (M_edgedownbutton2_out) begin
      downbutton_2new = 1'h1;
    end else begin
      downbutton_2new = 1'h0;
    end
    M_resetbuttoncond_in = resetbutton;
    M_edgeresetbutton_in = M_resetbuttoncond_out;
    if (M_edgeresetbutton_out) begin
      resetbutton_new = 1'h1;
    end else begin
      resetbutton_new = 1'h0;
    end
  end
endmodule
